name: TestEnv-backend-BuildImageAndPush
# Build the image and deploy in OpenShift environment
env:
  # Registries such as GHCR, Quay.io, and Docker Hub are supported.
  TOOLSNS_IMAGE_REGISTRY: image-registry.apps.silver.devops.gov.bc.ca/c5839f-tools
  TESTNS_IMAGE_REGISTRY: image-registry.apps.silver.devops.gov.bc.ca/c5839f-test
  IMAGE_REGISTRY_USER: ${{ secrets.C5839F_OPENSHIFT_GITHUB_ACTIONS_SA_USER }}
  IMAGE_REGISTRY_PASSWORD: ${{ secrets.C5839F_OPENSHIFT_GITHUB_ACTIONS_SA_TOKEN }}
  IMAGE_NAME: mspdirect-backend
  IMAGE_TAGS:

on:
  # Run the workflow manually, instead of on a push.
  # The user specifies the name of the build config to use, which should be an
  #   API build config.
  # --------------------------------------------------------------------------

  push:
    branches: [main]
    paths:
      - "backend/**"

  workflow_dispatch:
    # inputs:
    #   branch:
    #     description: 'Enter branch name:'
    #     required: true
    #     default: main

jobs:
  buildAndPush:
    runs-on: ubuntu-latest

    steps:
      # Check out the code
      - name: Check out code
        id: checkout
        uses: actions/checkout@v2
        with:
          ref: main

      # Determine the tags
      - name: Determine image tags
        if: env.IMAGE_TAGS == ''
        run: |
          echo "IMAGE_TAGS=latest ${GITHUB_SHA::12} mspdirect-test" | tee -a $GITHUB_ENV

      # Build from docker file
      - name: Build from Dockerfile
        id: build-docker
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: ${{ env.IMAGE_TAGS }}
          context: ./backend
          dockerfiles: |
            ./backend/Dockerfile

      - name: Push to tools registry
        id: push-image-tools
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-docker.outputs.image }}
          tags: ${{ steps.build-docker.outputs.tags }}
          registry: ${{ env.TOOLSNS_IMAGE_REGISTRY }}
          username: ${{ env.IMAGE_REGISTRY_USER }}
          password: ${{ env.IMAGE_REGISTRY_PASSWORD }}

      - name: Push to test registry
        id: push-image-test
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-docker.outputs.image }}
          tags: ${{ steps.build-docker.outputs.tags }}
          registry: ${{ env.TESTNS_IMAGE_REGISTRY }}
          username: ${{ env.IMAGE_REGISTRY_USER }}
          password: ${{ env.IMAGE_REGISTRY_PASSWORD }}

      # Update the image ID in the manifest repository used by Argo CD.
      # We need to use the SSH deploy key to check out the manifest repo, set up
      # Kustomize in the runner, update the image ID, commit the change, and
      # push the changes back to the manifest repository.
      # ------------------------------------------------------------------------
      - name: Prepare deploy key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.GITOPS_C5839F_PRIVATE_KEY }}

      - name: Check out manifest repo
        uses: actions/checkout@v2
        with:
          ssh-key: ${{ secrets.GITOPS_C5839F_PRIVATE_KEY }}
          repository: ${{ secrets.GITOPS_C5839F_REPO }}
          ref: main

      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v1

      - name: Update image ID and commit change
        if: ${{ success() }}
        run: |
          cd mspdirect-devops/overlays/test
          kustomize edit set image "backend-image=image-registry.openshift-image-registry.svc:5000/c5839f-test/${{ env.IMAGE_NAME }}@${{ steps.push-image-test.outputs.digest }}"
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -am "Update Backend API image ID for test"
          git push origin
