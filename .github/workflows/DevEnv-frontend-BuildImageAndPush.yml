name: DevEnv-frontend-BuildImageAndPush
# Build the image and deploy in OpenShift environment
env:
  # Registries such as GHCR, Quay.io, and Docker Hub are supported.
  DEVNS_IMAGE_REGISTRY: image-registry.apps.silver.devops.gov.bc.ca/c5839f-dev
  TOOLSNS_IMAGE_REGISTRY: image-registry.apps.silver.devops.gov.bc.ca/c5839f-tools
  IMAGE_REGISTRY_USER: ${{ secrets.C5839F_OPENSHIFT_GITHUB_ACTIONS_SA_USER }}
  IMAGE_REGISTRY_PASSWORD: ${{ secrets.C5839F_OPENSHIFT_GITHUB_ACTIONS_SA_TOKEN }}
  IMAGE_NAME: mspdirect-frontend
  DEV_SUFFIX: -dev
  IMAGE_TAGS:

on:
  # Run the workflow manually, instead of on a push.
  # The user specifies the name of the branch which is defaulted to 'main'.
  # --------------------------------------------------------------------------
  workflow_dispatch:
    inputs:
      branch:
        description: "Enter branch name:"
        required: true
        default: main

jobs:
  buildAndPush:
    runs-on: ubuntu-latest

    steps:
      # Check out the code
      - name: Check out code
        id: checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch }}

      # Determine the version number tag i.e. dev_build_<branch-name>_<build execution>
      - name: Determine Version number
        # Branch name is taken from action inputs
        run: |
          echo "VERSION=dev_build_${{ github.event.inputs.branch }}_${{github.run_number}}" | tee -a $GITHUB_ENV

      # Edit .env in frontend with the value
      - name: Edit env file to add version
        run: |
          cd ./frontend/env_config
          sed -i 's/<VERSION>/${{ env.VERSION }}/' .env

      # Determine the tags
      - name: Determine image tags
        run: |
          echo "IMAGE_TAGS=${{ env.TOOLSNS_IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${GITHUB_SHA::12} ${{ env.TOOLSNS_IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:mspdirect${{ env.DEV_SUFFIX }} ${{ env.TOOLSNS_IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }} ${{ env.DEVNS_IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}${{ env.DEV_SUFFIX }}:${GITHUB_SHA::12} ${{ env.DEVNS_IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}${{ env.DEV_SUFFIX }}:mspdirect${{ env.DEV_SUFFIX }} ${{ env.DEVNS_IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}${{ env.DEV_SUFFIX }}:${{ env.VERSION }} " | tee -a $GITHUB_ENV

      # Build from docker file. Tags the build the previously created tags which are used in the next step which pushes them to the registry. One set of tags for tools and one for dev. Only 'tags' are used as this allows specifying
      # the image name in each tag. This is needed because it is different in each namespace as it contains '-dev' suffix in the dev namespace. Note, with multiple tags both have the same digest value.
      - name: Build from Dockerfile
        id: build-docker
        uses: redhat-actions/buildah-build@v2
        with:
          tags: ${{ env.IMAGE_TAGS }}
          context: ./frontend
          dockerfiles: |
            ./frontend/Dockerfile

      # Push both images at the same time using different tags from the build. This allows having different image names.
      - name: Push to tools and dev registry
        id: push-images
        uses: redhat-actions/push-to-registry@v2
        with:
          tags: ${{ steps.build-docker.outputs.tags }}
          username: ${{ env.IMAGE_REGISTRY_USER }}
          password: ${{ env.IMAGE_REGISTRY_PASSWORD }}

      # Update the image ID in the manifest repository used by Argo CD.
      # We need to use the SSH deploy key to check out the manifest repo, set up
      # Kustomize in the runner, update the image ID, commit the change, and
      # push the changes back to the manifest repository.
      # ------------------------------------------------------------------------
      - name: Prepare deploy key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.GITOPS_C5839F_PRIVATE_KEY }}

      - name: Check out manifest repo
        uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.GITOPS_C5839F_PRIVATE_KEY }}
          repository: ${{ secrets.GITOPS_C5839F_REPO }}
          ref: main

      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v1

      - name: Update image ID and commit change
        if: ${{ success() }}
        run: |
          cd mspdirect-devops/overlays/dev
          kustomize edit set image "frontend-image=image-registry.openshift-image-registry.svc:5000/c5839f-dev/${{ env.IMAGE_NAME }}${{ env.DEV_SUFFIX }}@${{ steps.push-images.outputs.digest }}"
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -am "Deploying build: ${{ env.VERSION }} in dev using DevEnv-frontend-BuildImageAndPush workflow."
          git push origin
