# This is a manual workflow that performs following activities:
# 1. Determine the version number tag i.e. release_1.0_<branch-name>_<build execution>
# 2. Determine tags for OpenShift image
# 3. Edit .env in frontend with the value
# 3. Creates images for frontend and backend code
# 4. Tags the images with release number
# 5. Tags the images with additional tags if any
# 6. Upload the images in image repository in tools namespace
# 7. Tag the commit in Git with release number
# 8. Deploy the release in test environment <Commented for next story>

name: release-mspdirect
# Build the image and deploy in OpenShift environment
env:
  # Registries such as GHCR, Quay.io, and Docker Hub are supported.
  TESTNS_IMAGE_REGISTRY: image-registry.apps.silver.devops.gov.bc.ca/c5839f-test
  IMAGE_REGISTRY: image-registry.apps.silver.devops.gov.bc.ca/c5839f-tools
  IMAGE_REGISTRY_USER: ${{ secrets.C5839F_OPENSHIFT_GITHUB_ACTIONS_SA_USER }}
  IMAGE_REGISTRY_PASSWORD: ${{ secrets.C5839F_OPENSHIFT_GITHUB_ACTIONS_SA_TOKEN }}
  IMAGE_NAME_BACKEND: mspdirect-backend
  IMAGE_NAME_FRONTEND: mspdirect-frontend
  IMAGE_TAGS:
  RELEASE_VERSION:

on:
  # Run the workflow manually, instead of on a push.
  # The user specifies the optional tag
  # --------------------------------------------------------------------------

  workflow_dispatch:
    inputs:
      OPENSHIFT_IMAGE_TAG:
        description: "Optional parameter for additional tags on released images. "
        required: false
        default:

jobs:
  createMSPDirectRelease:
    runs-on: ubuntu-latest

    steps:
      # Check out the code
      - name: Check out code
        id: checkout
        uses: actions/checkout@v3
        with:
          ref: main

      # 1. Determine the version number tag i.e. release_1.0_<branch-name>_<build execution>
      - name: Determine Version number
        # Branch name is fixed to 'main' in version identifier
        run: |
          echo "RELEASE_VERSION=release_1.0_main_${{github.run_number}}" | tee -a $GITHUB_ENV

      # 2. Determine tags for OpenShift image
      - name: Determine image tags
        run: |
          echo "IMAGE_TAGS= ${GITHUB_SHA::12} ${{ env.RELEASE_VERSION }} ${{ github.event.inputs.OPENSHIFT_IMAGE_TAG }}  " | tee -a $GITHUB_ENV

      # 3. Edit .env in frontend with the value
      - name: Edit env file to add version
        run: |
          cd ./frontend/env_config
          sed -i 's/<VERSION>/${{ env.RELEASE_VERSION }}/' .env

      # 3. Creates images for frontend and backend code
      # 4. Tags the images with release number
      # 5. Tags the images with additional tags if any
      # Build frontend from docker file
      - name: Build frontend from Dockerfile
        id: build-docker-frontend
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME_FRONTEND }}
          tags: ${{ env.IMAGE_TAGS }}
          context: ./frontend
          dockerfiles: |
            ./frontend/Dockerfile

      # Build backend from docker file
      - name: Build backend from Dockerfile
        id: build-docker-backend
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME_BACKEND }}
          tags: ${{ env.IMAGE_TAGS }}
          context: ./backend
          dockerfiles: |
            ./backend/Dockerfile

      # 6. Upload the images in image repository in tools namespace
      - name: Push frontend image to registry
        id: push-image-frontend
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-docker-frontend.outputs.image }}
          tags: ${{ steps.build-docker-frontend.outputs.tags }}
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ env.IMAGE_REGISTRY_USER }}
          password: ${{ env.IMAGE_REGISTRY_PASSWORD }}

      - name: Push backend image to registry
        id: push-image-backend
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-docker-backend.outputs.image }}
          tags: ${{ steps.build-docker-backend.outputs.tags }}
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ env.IMAGE_REGISTRY_USER }}
          password: ${{ env.IMAGE_REGISTRY_PASSWORD }}

      # 7. Tag the commit in Git with release number and <Check> Optional tags
      - name: Tag the commit with Release number
        id: tag
        run: |
          echo "Tagging the commit: ${GITHUB_SHA}"
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a -f "v${{env.RELEASE_VERSION}}" -m "Tag generated by GitHub Actions: release-mspdirect."
          git push origin --tags
